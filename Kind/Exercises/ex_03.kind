// Basic Exercises involving Nats

type Nat {
  zero
  succ(pred: Nat)
}

// Increment
// 2 + 1 = 3
// 0 + 1 = 1
inc(a: Nat): Nat  
  case a {
    zero: Nat.succ(Nat.zero)
    succ: Nat.succ(a)
  }    
// ex_03:Nat
// inc(7)
  

// Decrement
// 2 - 1 = 1
// 0 - 1 = 0
dec(a: Nat): Nat
   case a {
     zero: Nat.zero
     succ: a.pred
   }
// ex_03: Nat
// dec(5)


is_zero(a: Nat): Bool
    case a{
      zero: Bool.true
      succ: Bool.false
    }
// ex_03: Bool
// is_zero(0)

    